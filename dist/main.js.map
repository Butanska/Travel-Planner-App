{"version":3,"sources":["webpack://Client/webpack/bootstrap","webpack://Client/./src/client/js/app.js","webpack://Client/./src/client/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","formSubmit","Date","month","getMonth","newDate","getDate","getFullYear","document","getElementById","addEventListener","e","feeling","async","baseURL","zip","response","fetch","weatherData","json","console","log","temperature","main","temp","error","getWeather","then","postData","date","userResponse","updateUI","url","data","method","credentials","headers","body","JSON","stringify","request","allData","lastEntry","length","innerHTML","window"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","function formSubmit(){\r\n\r\n  /* Global Variables */\r\n  const baseURL = 'http://api.openweathermap.org/data/2.5/weather?zip='\r\n  \r\n  const apiKEY = '881e57e87e8fd3bd58439043d5f45f96';\r\n  \r\n  const addLocationPath = '/add'\r\n  \r\n  // Create a new date instance dynamically with JS\r\n  let d = new Date();\r\n  let m = d.getMonth();\r\n  let month = m+1;\r\n  let newDate = d.getDate()+'.'+month+'.'+ d.getFullYear();\r\n  \r\n  //Write an async function that uses fetch() to make a GET request to the OpenWeatherMap API\r\n  const getWeather = async (baseURL, zip, key)=>{\r\n    const response = await fetch(baseURL+zip+',us&units=metric&appid='+key);\r\n    try{\r\n      const weatherData = await response.json();\r\n      console.log(weatherData);\r\n      temperature = weatherData.main.temp;\r\n      return temperature\r\n    } catch(error){\r\n      console.log('error', error);\r\n    }\r\n  }\r\n  \r\n  //Create an event listener for the element with the id: generate, with a callback function to execute when it is clicked\r\n  document.getElementById('generate').addEventListener('click', performAction);\r\n  \r\n  function performAction(e){\r\n    // Select the value of the user response to include in POST\r\n    const feeling = document.getElementById('feelings').value;\r\n  \r\n    // Call your async GET request with parameters\r\n    getWeather(baseURL, document.getElementById('zip').value, apiKEY)\r\n      .then(function(temperature){\r\n        postData(addLocationPath, {temperature: temperature, date: newDate, userResponse: feeling})\r\n        //Update UI\r\n        updateUI();\r\n      })\r\n  };\r\n  \r\n  //Write an async function to make a POST request to add the API data, user input and date\r\n  const postData = async ( url = '', data = {})=>{\r\n    const response = await fetch(url, {\r\n    method: 'POST', \r\n    credentials: 'same-origin', \r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),       \r\n  });\r\n    try {\r\n      const newData = await response.json();\r\n      return newData;\r\n    }catch(error) {\r\n    console.log(\"error\", error);\r\n    }\r\n  };\r\n  \r\n  //Dynamically Update the UI\r\n  const updateUI = async()=>{\r\n    //Retrieve data from the app endpoint\r\n    const request = await fetch('/all')\r\n    try{\r\n      const allData = await request.json();\r\n      console.log(allData);\r\n      const logsNumber = allData.length;\r\n      const lastEntry = allData[logsNumber-1];\r\n      document.getElementById('date').innerHTML = 'Date: '+ lastEntry.date;\r\n      document.getElementById('temp').innerHTML = 'Tempearature: '+lastEntry.temperature + '&deg;C';\r\n      document.getElementById('content').innerHTML = 'You are feeling '+lastEntry.userResponse;\r\n    }catch(error){\r\n      console.log('error', error);\r\n    };\r\n  }\r\n}\r\n\r\n\r\n// alert('I exist!')\r\nexport { formSubmit }\r\n\r\n","import {formSubmit} from './js/app'\nimport './styles/style.scss'\n\nwindow.addEventListener('DOMContentLoaded', formSubmit);\n\n// alert('I exist!')\n\nexport {formSubmit}\n\n// /* Global Variables */\n// const baseURL = 'http://api.openweathermap.org/data/2.5/weather?zip='\n\n// const apiKEY = '881e57e87e8fd3bd58439043d5f45f96';\n\n// const addLocationPath = '/add'\n// // Create a new date instance dynamically with JS\n// let d = new Date();\n// let m = d.getMonth();\n// let month = m+1;\n// let newDate = d.getDate()+'.'+month+'.'+ d.getFullYear();\n\n// //Write an async function that uses fetch() to make a GET request to the OpenWeatherMap API\n// const getWeather = async (baseURL, zip, key)=>{\n//   const response = await fetch(baseURL+zip+',us&units=metric&appid='+key);\n//   try{\n//     const weatherData = await response.json();\n//     console.log(weatherData);\n//     temperature = weatherData.main.temp;\n//     return temperature\n//   } catch(error){\n//     console.log('error', error);\n//   }\n// }\n\n// //Create an event listener for the element with the id: generate, with a callback function to execute when it is clicked\n// document.getElementById('generate').addEventListener('click', performAction);\n\n\n// function performAction(e){\n//   // Select the value of the user response to include in POST\n//   const feeling = document.getElementById('feelings').value;\n\n//   // Call your async GET request with parameters\n//   getWeather(baseURL, document.getElementById('zip').value, apiKEY)\n//     .then(function(temperature){\n//       postData(addLocationPath, {temperature: temperature, date: newDate, userResponse: feeling})\n//       //Update UI\n//       updateUI();\n//     })\n// };\n\n// //Write an async function to make a POST request to add the API data, user input and date\n// const postData = async ( url = '', data = {})=>{\n//   const response = await fetch(url, {\n//   method: 'POST', \n//   credentials: 'same-origin', \n//   headers: {\n//       'Content-Type': 'application/json',\n//   },\n//   body: JSON.stringify(data),       \n// });\n//   try {\n//     const newData = await response.json();\n//     return newData;\n//   }catch(error) {\n//   console.log(\"error\", error);\n//   }\n// };\n\n// //Dynamically Update the UI\n// const updateUI = async()=>{\n//   //Retrieve data from the app endpoint\n//   const request = await fetch('/all')\n//   try{\n//     const allData = await request.json();\n//     console.log(allData);\n//     const logsNumber = allData.length;\n//     const lastEntry = allData[logsNumber-1];\n//     document.getElementById('date').innerHTML = 'Date: '+ lastEntry.date;\n//     document.getElementById('temp').innerHTML = 'Tempearature: '+lastEntry.temperature + '&deg;C';\n//     document.getElementById('content').innerHTML = 'You are feeling '+lastEntry.userResponse;\n//   }catch(error){\n//     console.log('error', error);\n//   };\n// }\n\n\n\n\n"],"sourceRoot":""}